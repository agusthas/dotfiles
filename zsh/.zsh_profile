#!/usr/bin/env zsh

## -- PATHS --
typeset -U path
path+=($HOME/bin)

case $(uname) in
Darwin)
  # commands for OS X go here
  __clip_cmd="pbcopy"
  ;;
Linux)
  # path=($HOME/.fnm $path)
  # export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
  __clip_cmd="xclip -selection clipboard"
  ;;
esac

if [[ -n $SSH_CONNECTION ]]; then
  if command -v doitclient >/dev/null 2>&1; then
    __clip_cmd="doitclient wclip"
  fi
fi

# Preferred editor
if command -v nvim >/dev/null 2>&1; then
  export EDITOR='nvim'
else
  export EDITOR='vim'
fi

export FZF_DEFAULT_OPTS="
--bind '?:toggle-preview,ctrl-d:preview-down,ctrl-u:preview-up,ctrl-y:execute-silent(echo {} | ${__clip_cmd:-''})'
"
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS"
--prompt='❯ '
--pointer='-'
--marker='+'
--tabstop=4
--color=dark
--color=hl:2:bold,fg+:4:bold,bg+:-1,hl+:2:bold,info:3:bold,border:8,prompt:2,pointer:5,marker:1,header:6
"
export FZF_COMPLETION_TRIGGER=','
function _fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}
function _fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

export WORKSPACES_LIST_PATH="$HOME/.workspaces_list" # MUST BE DEFINED

## -- ALIASES --
alias :q="exit"
alias getrandom='openssl rand -base64 32'
alias gcm="git commit -m"
alias lg='lazygit'

## -- FUNCTIONS --
function cap() { tee /tmp/capture.out; }
function ret() { cat /tmp/capture.out; }
# Tmux
# Kill server but with confirmation to kill all sessions
function tks() {
  if [[ -n $TMUX ]]; then
    echo "Still attached to tmux. Please detach first."
    return 1
  else
    # List active tmux sessions if any
    if tmux ls >/dev/null 2>&1; then
      echo "Active tmux sessions:"
      tmux ls
      printf "\n"

      echo -n "Do you want to kill the tmux server? [y/N] "
      read answer
    fi

    if [[ -z $answer || $answer =~ ^[Yy]$ ]]; then
      tmux kill-server
    fi
  fi
}

function fns() {
  if [ ! -f package.json ]; then
    echo -e "No package.json found" >&2
    return 1
  fi

  local printCommand="false"
  if [[ $1 == "-p" ]]; then
    printCommand="true"
    echo ">> Printing running script to prompt"
    shift
  else
    echo ">> Executing script"
    echo ">> use \`fns -p\` to print script to prompt"
  fi

  local script_name=$(jq '.scripts | keys[]' package.json -r \
    | fzf -q "$1" --height=50% \
          --reverse \
          --preview-window "nohidden:70%" \
          --prompt="Select a script: " \
          --preview="jq '.scripts.\"{}\"' package.json -r")
  
  if [ -n "$script_name" ]; then
    if [[ "$printCommand" == "true" ]]; then
      print -z "npm run $script_name"
    else
      npm run $script_name
    fi
  fi
}

# Docker
# remove image include multi options
function drmi() {
  docker images |
    fzf -q "$1" --header-lines=1 --no-sort -m --tac --prompt="Choose image(s) to remove: " |
    awk '{print $3}' |
    xargs -I {} docker rmi {}
}

# remove volume include multi options
function drmv() {
  docker volume ls |
    fzf -q "$1" --header-lines=1 --no-sort -m --tac --prompt="Choose volume(s) to remove: " |
    awk {'print $2'} |
    xargs -I {} docker volume rm {}
}

# Remove commented command from history
function zshaddhistory() {
  emulate -L zsh
  if ! [[ "$1" =~ "(^ |^clear|^fns)" ]]; then
    print -sr -- "${1%%$'\n'}"
    fc -p
  else
    return 1
  fi
}

bindkey '^[#' pound-insert
bindkey -s ^f 'tms\n'
