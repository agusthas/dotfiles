#!/usr/bin/env bash

if ! type docker fzf >/dev/null; then
  exit 1
fi

while test $# -gt 0; do
  case "$1" in
    -f|--file)
      shift
      compose_files+=("$1")
      shift
      ;;
    -p|--project)
      shift
      compose_project="$1"
      shift
      ;;
    --env-file)
      shift
      compose_env_file="$1"
      shift
      ;;
    *)
      break
      ;;
  esac
done

build_cmd_prefix() {
  local cmd="docker compose"

  if [ -n "$compose_files" ]; then
    for compose_file in "${compose_files[@]}"; do
      cmd="$cmd -f $compose_file"
    done
  fi

  if [ -n "$compose_project" ]; then
    cmd="$cmd -p $compose_project"
  fi

  if [ -n "$compose_env_file" ]; then
    cmd="$cmd --env-file $compose_env_file"
  fi

  echo "$cmd"
}

cmd=$(build_cmd_prefix)

compose_print_env() {
  local files
  if [ -n "$compose_env_file" ]; then
    files=$compose_env_file
  elif [ -n "$compose_files" ]; then
    for compose_file in "${compose_files[@]}"; do
      files+="$compose_file "
    done
  else
    files="docker-compose.yml"
  fi

  grep -o '\${[^}]*}' $files | sed -e 's/^\${//' -e 's/}$/=/'
}

compose_reset() {
  $cmd down --volumes --remove-orphans
  $cmd up -d
}

if [[ $# -ne 0 ]]; then
  case "$1" in
    print-env)
      compose_print_env
      ;;
    reset)
      compose_reset
      ;;
    *)
      $cmd $@
      ;;
  esac
else
  commands=$(
    docker compose --help | \
      # remove docker help footer
      head -n -2 | \
      # remove docker commands header
      sed '/Commands:/,$!d' | \
      while read -r line; do
        awk '{print $1}'
      done
  )


  command=$(echo "$commands" | fzf --reverse --prompt "$cmd ")

  cmd="$cmd $command"

  cmd=$(docker compose $command --help \
    | sed '1,/Options:/d' \
    | sed 's/^ *//g' \
    | sed 's/ *$//g' \
    | sed 's/^-., //g' \
    | awk '{print $1}' \
    | fzf --query "--" --multi --reverse --prompt "$cmd " \
    | xargs echo $cmd)
  
  echo "$cmd" && eval "$cmd"
fi 